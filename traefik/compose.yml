networks:
  boilerplate_network:
    name: boilerplate_network

configs:
  certs_files:
    file: ./certs
  certs_config:
    file: ./certs-traefik.yml

services:

  traefik:
    image: traefik:${TRAEFIK_VERSION}
    container_name: traefik
    command:
      - "--entrypoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--accesslog=true"
      - "--api"

      - "--ping=true"
      - "--ping.entryPoint=web"

      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network=boilerplate_network"
      - "--providers.file.directory=/etc/traefik/dynamic"

      - "--metrics=true"
      - "--metrics.prometheus=true"
      - "--metrics.prometheus.entryPoint=web"
      - "--metrics.prometheus.addEntryPointsLabels=true"
      - "--metrics.prometheus.addServicesLabels=true"
    #  - "--log.level=DEBUG"
    restart: unless-stopped
    environment:
      TZ: Europe/Paris
    ports:
      - 80:80
      - 443:443
    configs:
      - source: certs_files
        target: /etc/certs/
      - source: certs_config
        target: /etc/traefik/dynamic/certs-traefik.yml
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - boilerplate_network
    labels:
      traefik.enable: true
      traefik.http.routers.api.entryPoints: websecure
      traefik.http.routers.api.tls: true
      traefik.http.routers.api.rule: ${DASHBOARD_TRAEFIK_RULE}
      traefik.http.routers.api.service: api@internal
      co.elastic.logs/module: traefik

  whoami:
    image: traefik/whoami
    container_name: whoami
    networks:
      - boilerplate_network
    depends_on:
      - traefik
    labels:
      traefik.enable: true
      traefik.http.routers.whoami.entrypoints: websecure
      traefik.http.routers.whoami.tls: true
      traefik.http.routers.whoami.rule: ${WHOAMI_TRAEFIK_RULE}
      traefik.http.services.whoami.loadbalancer.server.port: 80
      traefik.http.middlewares.whoami-strip.stripprefix.prefixes: /whoami
      traefik.http.routers.whoami.middlewares: whoami-strip
