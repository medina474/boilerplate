configs:
  grafana_config:
    file: ./grafana
  prometheus_config:
    file: prometheus/prometheus.yml
  alertmanager_config:
    file: ./alertmanager

x-logging:
  &default-logging
    driver: loki
    options:
      loki-url: http://localhost:3100/loki/api/v1/push
      loki-external-labels: job=docker,container={{.Name}},environment=development
      loki-retries: 5
      loki-max-backoff: 800ms
      loki-timeout: 1s
      keep-file: 'true'

services:

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:${GF_VERSION}
    deploy:
      resources:
        limits:
          memory: 100M
    restart: unless-stopped
    configs:
      - source: grafana_config
        target: /etc/grafana
    volumes:
      - ./data/grafana:/var/lib/grafana
    ports:
      - ${GF_PORT}:3000
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false

  prometheus:
    container_name: prometheus
    image: prom/prometheus:${PROMETHEUS_VERSION}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.external-url=/prometheus/'
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    volumes:
      - ./data/prometheus:/prometheus
    ports:
      - ${PROMETHEUS_PORT}:9090
    restart: unless-stopped

  loki:
    container_name: loki
    image: grafana/loki:${LOKI_VERSION}
    ports:
      - ${LOKI_PORT}:3100
    command: -config.file=/etc/loki/local-config.yaml

  alertmanager:
    container_name: alertmanager
    image: prom/alertmanager:v0.26.0
    ports:
      - 9093:9093
    configs:
      - source: alertmanager_config
        target: /etc/alertmanager
    volumes:
      - ./data/alertmanager:/alertmanager
    command: --config.file=/etc/alertmanager/alertmanager.yml --log.level=debug

# based on https://github.com/docker/awesome-compose/tree/master/prometheus-grafana
# https://github.com/stefanprodan/dockprom
# https://yoandev.co/superviser-ses-conteneurs-docker-avec-prometheus/grafana-et-stressons-la-solution-avec-une-api-symfony-et-postman/
