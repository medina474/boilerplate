volumes:
  grafana:
  prometheus:

configs:
  prometheus_config:
    file: prometheus/prometheus.yml

networks:
  k6:

services:

  grafana:
    image: grafana/grafana-oss:${GF_VERSION}
    container_name: grafana
    volumes:
      - ./data/grafana:/var/lib/grafana
      - ./grafana_datasources:/etc/grafana/provisioning/datasources
    ports:
      - ${GF_PORT}:3000
    environment:
      GF_SECURITY_ADMIN_USER: ${GF_SECURITY_ADMIN_USER}
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD}
      GF_USERS_ALLOW_SIGN_UP: false
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION}
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    configs:
      - source: prometheus_config
        target: /etc/prometheus/prometheus.yml
    volumes:
      - prometheus:/prometheus
    ports:
      - ${PROMETHEUS_PORT}:9090
    restart: unless-stopped

  loki:
    image: grafana/loki:${LOKI_VERSION}
    ports:
      - ${LOKI_PORT}:3100
    command: -config.file=/etc/loki/local-config.yaml

  # siteinspector:
  #   image: siteinspector/siteinspector:latest
  #   container_name: siteinspector
  #   volumes:
  #     - uptime:/app/data
  #   ports:
  #     - 3001:3001

  # k6:
  #   image: grafana/k6:0.47.0
  #   networks:
  #     - k6
  #   ports:
  #     - 6565:6565
  #  environment:
  #    - K6_OUT=influxdb=http://influxdb:8086/k6
  #  volumes:
  #    - ./examples:/scripts

# based on https://github.com/docker/awesome-compose/tree/master/prometheus-grafana
# https://github.com/stefanprodan/dockprom
# https://yoandev.co/superviser-ses-conteneurs-docker-avec-prometheus/grafana-et-stressons-la-solution-avec-une-api-symfony-et-postman/
