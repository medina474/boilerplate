services:

  postgresql:
    image: cinema/postgresql
    container_name: postgresql
    build:
      context: ./postgresql
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
      interval: 1m
      timeout: 5s
      retries: 5
      start_period: 30s
    volumes:
      - postgresql_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    env_file:
      - ./.env
    volumes:
      - pgadmin_data:/var/lib/pgadmin/
      - ./postgresql/pgadmin/:/var/lib/pgadmin/storage/
    ports:
      - 8000:80
    depends_on:
      - postgresql


  express:
    image: cinema/express
    container_name: express
    build:
      context: ./express
    env_file:
      - ./.env
    depends_on:
      - postgresql
    restart:
      always
    ports:
      - 8002:80

  fusionauth:
    image: fusionauth/fusionauth-app:latest
    container_name: fusionauth
    depends_on:
      postgresql:
        condition: service_healthy
    environment:
      DATABASE_URL: jdbc:postgresql://postgresql:5432/fusionauth
      DATABASE_ROOT_USERNAME: ${POSTGRES_USER}
      DATABASE_ROOT_PASSWORD: ${POSTGRES_PASSWORD}
      DATABASE_USERNAME: ${FUSIONAUTH_DATABASE_USERNAME}
      DATABASE_PASSWORD: ${FUSIONAUTH_DATABASE_PASSWORD}
      FUSIONAUTH_APP_MEMORY: ${FUSIONAUTH_APP_MEMORY}
      FUSIONAUTH_APP_RUNTIME_MODE: development
      FUSIONAUTH_APP_URL: http://fusionauth:9011
      SEARCH_TYPE: database
    ports:
      - 9011:9011
    volumes:
      - fusionauth_config:/usr/local/fusionauth/config

volumes:
  pgadmin_data:
  postgresql_data:
  fusionauth_config:
